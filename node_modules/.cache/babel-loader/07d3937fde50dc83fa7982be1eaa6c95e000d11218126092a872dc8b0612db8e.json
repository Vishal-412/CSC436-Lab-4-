{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\workspace\\\\myblog\\\\src\\\\Post.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  title,\n  description,\n  author,\n  dateCreated,\n  complete,\n  dateCompleted\n}) {\n  _s();\n  function formatDate(dateString) {\n    if (dateString) {\n      const date = new Date(dateString);\n      const formattedDate = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n      return formattedDate;\n    }\n    return \"Not Applicable\";\n  }\n  function formatDateTime(dateTime) {\n    if (dateTime) {\n      return dateTime.toLocaleString(); // Format with date, time, and seconds\n    }\n\n    return \"Not Applicable\";\n  }\n  const chicagoTime = new Date().toLocaleString(\"en-US\", {\n    timeZone: \"America/Chicago\"\n  });\n  const [isComplete, setIsComplete] = useState(complete);\n  const [completionDate, setCompletionDate] = useState(dateCompleted);\n  function handleCompleteToggle() {\n    setIsComplete(!isComplete);\n    if (!completionDate) {\n      // Get the current time in the Chicago time zone (Central Time Zone)\n      const chicagoTime = new Date().toLocaleString(\"en-US\", {\n        timeZone: \"America/Chicago\"\n      });\n      // Set the completion date to Chicago time\n      setCompletionDate(new Date(chicagoTime));\n    } else {\n      setCompletionDate('');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: [\"Written by \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\"Date Created: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: formatDateTime(Date(dateCreated))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isComplete,\n          onChange: handleCompleteToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 1\n        }, this), \" Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }, this), isComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\"Date Completed: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: formatDateTime(Date(completionDate))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 1\n  }, this);\n}\n_s(Post, \"mwAJvr709h7cgltIE8Wz7j0DrsM=\");\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Post","title","description","author","dateCreated","complete","dateCompleted","_s","formatDate","dateString","date","Date","formattedDate","toLocaleDateString","year","month","day","formatDateTime","dateTime","toLocaleString","chicagoTime","timeZone","isComplete","setIsComplete","completionDate","setCompletionDate","handleCompleteToggle","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/user/workspace/myblog/src/Post.js"],"sourcesContent":["import { useState } from \"react\";\r\nexport default function Post({ title, description, author, dateCreated, complete, dateCompleted }) {\r\n    \r\nfunction formatDate(dateString) { if (dateString) {  \r\nconst date = new Date(dateString);\r\nconst formattedDate = date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\r\nreturn formattedDate;\r\n}\r\nreturn \"Not Applicable\";\r\n}\r\nfunction formatDateTime(dateTime) {\r\n  if (dateTime) {\r\nreturn dateTime.toLocaleString(); // Format with date, time, and seconds\r\n}\r\nreturn \"Not Applicable\";\r\n}\r\nconst chicagoTime = new Date().toLocaleString(\"en-US\", { timeZone: \"America/Chicago\", });\r\nconst [isComplete, setIsComplete] = useState(complete);\r\nconst [completionDate, setCompletionDate] = useState(dateCompleted);\r\nfunction handleCompleteToggle() {\r\nsetIsComplete(!isComplete);        \r\nif (!completionDate) {\r\n // Get the current time in the Chicago time zone (Central Time Zone)\r\n  const chicagoTime = new Date().toLocaleString(\"en-US\", {\r\n timeZone: \"America/Chicago\",\r\n });\r\n // Set the completion date to Chicago time\r\n setCompletionDate(new Date(chicagoTime));\r\n } else {\r\n setCompletionDate('');\r\n }\r\n}\r\nreturn (\r\n<div>\r\n<h3>{title}</h3>\r\n<div>{description}</div>\r\n<br />\r\n<i>Written by <b>{author}</b></i>\r\n<div><i>Date Created: <b>{formatDateTime(Date(dateCreated))}</b></i></div>\r\n<div>\r\n<label>\r\n<input type=\"checkbox\" checked={isComplete} onChange={handleCompleteToggle} /> Complete\r\n</label>\r\n</div>\r\n{isComplete && (\r\n<div>\r\n<i>Date Completed: <b>{formatDateTime(Date(completionDate))}</b></i>\r\n</div>\r\n)}\r\n</div>\r\n);\r\n}\r\n\r\n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}