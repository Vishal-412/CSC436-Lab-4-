{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\workspace\\\\myblog\\\\src\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  post\n}) {\n  _s();\n  function formatDate(dateString) {\n    if (dateString) {\n      const date = new Date(dateString);\n      const formattedDate = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n      return formattedDate;\n    }\n    return \"Not Applicable\";\n  }\n  function formatDateTime(dateTime) {\n    if (dateTime) {\n      return dateTime.toLocaleString(); // Format with date, time, and seconds\n    }\n\n    return \"Not Applicable\";\n  }\n  const [isComplete, setIsComplete] = useState(post.complete);\n  const [completionDate, setCompletionDate] = useState(post.dateCompleted);\n  function handleCompleteToggle() {\n    setIsComplete(!isComplete);\n    if (!completionDate) {\n      // Get the current time in the Chicago time zone (Central Time Zone)\n      const chicagoTime = new Date().toLocaleString(\"en-US\", {\n        timeZone: \"America/Chicago\"\n      });\n\n      // Set the completion date to Chicago time\n      setCompletionDate(new Date(chicagoTime));\n    } else {\n      setCompletionDate('');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: [\"Written by \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: post.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\"Date Created: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: formatDateTime(new Date(post.dateCreated))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isComplete,\n          onChange: handleCompleteToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), \" Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), isComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\"Date Completed: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: formatDateTime(new Date(completionDate))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"hYLuNaUlWLLihLd7iFjMsedDnx0=\");\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Post","post","_s","formatDate","dateString","date","Date","formattedDate","toLocaleDateString","year","month","day","formatDateTime","dateTime","toLocaleString","isComplete","setIsComplete","complete","completionDate","setCompletionDate","dateCompleted","handleCompleteToggle","chicagoTime","timeZone","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","author","dateCreated","className","type","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/user/workspace/myblog/src/Post.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Post({ post }) {\r\n\r\n\r\n    \r\n  function formatDate(dateString) {\r\n    if (dateString) {  \r\n      const date = new Date(dateString);\r\n      const formattedDate = date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\r\n      return formattedDate;\r\n    }\r\n    return \"Not Applicable\";\r\n  }\r\n\r\n  function formatDateTime(dateTime) {\r\n    if (dateTime) {\r\n      return dateTime.toLocaleString(); // Format with date, time, and seconds\r\n    }\r\n    return \"Not Applicable\";\r\n  }\r\n\r\n  const [isComplete, setIsComplete] = useState(post.complete);\r\n  const [completionDate, setCompletionDate] = useState(post.dateCompleted);\r\n\r\n  function handleCompleteToggle() {\r\n    setIsComplete(!isComplete);\r\n\r\n    if (!completionDate) {\r\n      // Get the current time in the Chicago time zone (Central Time Zone)\r\n      const chicagoTime = new Date().toLocaleString(\"en-US\", {\r\n        timeZone: \"America/Chicago\",\r\n      });\r\n\r\n      // Set the completion date to Chicago time\r\n      setCompletionDate(new Date(chicagoTime));\r\n    } else {\r\n      setCompletionDate('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>{post.title}</h3>\r\n      <div>{post.content}</div>\r\n      <br />\r\n      <i>Written by <b>{post.author}</b></i>\r\n      <div><i>Date Created: <b>{formatDateTime(new Date(post.dateCreated))}</b></i></div>\r\n      <div className=\"app-container\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isComplete}\r\n            onChange={handleCompleteToggle}\r\n          /> Complete\r\n        </label>\r\n      </div>\r\n      {isComplete && (\r\n        <div>\r\n          <i>Date Completed: <b>{formatDateTime(new Date(completionDate))}</b></i>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}