{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\workspace\\\\myblog\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useReducer } from \"react\";\nimport CreatePost from \"./CreatePost\"; // Import the CreatePost component\nimport UserBar from \"./Userbar\"; // Import the UserBar component\nimport PostList from \"./PostList\"; // Import the PostList component\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Define initial posts data\n  const initialPosts = [{\n    title: \"Node JS\",\n    content: \"Used for backend\",\n    author: \"Vishal\",\n    dateCreated: new Date().toISOString()\n  }, {\n    title: \"React\",\n    content: \"Used for frontend\",\n    author: \"Vishal\",\n    dateCreated: new Date().toISOString()\n  }, {\n    title: \"Webapplications\",\n    content: \"Frontend + Backend\",\n    author: \"Vishal\",\n    dateCreated: new Date().toISOString()\n  }];\n  // State to control the visibility of the create post form\n  const [createPostVisible, setCreatePostVisible] = useState(false);\n  function userReducer(state, action) {\n    // User Reducer: Manages user-related actions\n    switch (action.type) {\n      case \"LOGIN\":\n        setCreatePostVisible(true); // Show create post form when user logs in\n        return action.username;\n      case \"REGISTER\":\n        setCreatePostVisible(true); // Show create post form when user registers\n        return action.username;\n      case \"LOGOUT\":\n        setCreatePostVisible(false); // Hide create post form when user logs out\n        return null;\n      default:\n        return state;\n    }\n  }\n  // State and set for managing user data\n  const [user, dispatchUserUser] = useReducer(userReducer, \"\");\n  // Reducer function for managing post-related actions\n  function postReducer(state, action) {\n    switch (action.type) {\n      case \"CREATE_POST\":\n        const newPost = {\n          title: action.post.title,\n          content: action.post.content,\n          author: user,\n          complete: false,\n          dateCreated: new Date().toISOString(),\n          dateCompleted: null\n        };\n        return [newPost, ...state];\n      case \"TOGGLE_POST\":\n        const updatedPosts = state.map(post => {\n          if (post.title === action.title) {\n            post.complete = !post.complete;\n            post.dateCompleted = post.complete ? new Date().toISOString() : null;\n          }\n          return post;\n        });\n        return updatedPosts;\n      case \"DELETE_POST\":\n        return state.filter(post => post.title !== action.title);\n      default:\n        return state;\n    }\n  }\n  // State and set for managing post data\n  const [posts, dispatchPost] = useReducer(postReducer, initialPosts);\n  const handleAddPost = newPost => {\n    console.log(newPost); // Function to handle adding a new post\n    dispatchPost({\n      type: \"CREATE_POST\",\n      ...newPost\n    });\n  };\n  // Function to handle deleting a post\n  const handleDeletePost = title => {\n    dispatchPost({\n      type: \"DELETE_POST\",\n      title\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(UserBar, {\n      user: user,\n      dispatchUser: dispatchUserUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 1\n    }, this), user && /*#__PURE__*/_jsxDEV(CreatePost, {\n      user: user,\n      handleAddPost: handleAddPost,\n      dispatchPost: dispatchPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts,\n      handleDeletePost: handleDeletePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 1\n    }, this), \" //renders the postlist component\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 1\n  }, this);\n}\n_s(App, \"Y3pfDakK6sXaHQ08P06TpBwUd/U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useReducer","CreatePost","UserBar","PostList","jsxDEV","_jsxDEV","App","_s","initialPosts","title","content","author","dateCreated","Date","toISOString","createPostVisible","setCreatePostVisible","userReducer","state","action","type","username","user","dispatchUserUser","postReducer","newPost","post","complete","dateCompleted","updatedPosts","map","filter","posts","dispatchPost","handleAddPost","console","log","handleDeletePost","className","children","dispatchUser","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/workspace/myblog/src/App.js"],"sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport CreatePost from \"./CreatePost\"; // Import the CreatePost component\nimport UserBar from \"./Userbar\"; // Import the UserBar component\nimport PostList from \"./PostList\"; // Import the PostList component\nimport \"./App.css\";\nfunction App() { // Define initial posts data\nconst initialPosts = [\n{title: \"Node JS\", content: \"Used for backend\", author: \"Vishal\",dateCreated: new Date().toISOString(),},\n{title: \"React\", content: \"Used for frontend\", author: \"Vishal\", dateCreated: new Date().toISOString(),},\n{title: \"Webapplications\",content: \"Frontend + Backend\",author: \"Vishal\", dateCreated: new Date().toISOString(),}\n];\n// State to control the visibility of the create post form\nconst [createPostVisible, setCreatePostVisible] = useState(false);\nfunction userReducer(state, action) {  // User Reducer: Manages user-related actions\nswitch (action.type) {\ncase \"LOGIN\":\nsetCreatePostVisible(true); // Show create post form when user logs in\nreturn action.username;\ncase \"REGISTER\":\nsetCreatePostVisible(true); // Show create post form when user registers\nreturn action.username;\ncase \"LOGOUT\":\nsetCreatePostVisible(false); // Hide create post form when user logs out\nreturn null;\ndefault:\nreturn state;\n}\n}\n// State and set for managing user data\nconst [user, dispatchUserUser] = useReducer(userReducer, \"\");\n// Reducer function for managing post-related actions\nfunction postReducer(state, action) {\nswitch (action.type) {\ncase \"CREATE_POST\":\nconst newPost = { title: action.post.title, content: action.post.content, author: user,complete: false,\ndateCreated: new Date().toISOString(),\ndateCompleted: null,\n};\nreturn [newPost, ...state];\ncase \"TOGGLE_POST\":\nconst updatedPosts = state.map((post) => {\nif (post.title === action.title) {\npost.complete = !post.complete;\npost.dateCompleted = post.complete ? new Date().toISOString() : null;\n}\nreturn post; });\nreturn updatedPosts;\ncase \"DELETE_POST\":\nreturn state.filter((post) => post.title !== action.title);\ndefault:\nreturn state;\n}}\n// State and set for managing post data\nconst [posts, dispatchPost] = useReducer(postReducer, initialPosts);\nconst handleAddPost = (newPost) => {\nconsole.log(newPost);  // Function to handle adding a new post\ndispatchPost({ type: \"CREATE_POST\", ...newPost });\n};\n// Function to handle deleting a post\nconst handleDeletePost = (title) => {\ndispatchPost({ type: \"DELETE_POST\", title });\n};\nreturn (\n<div className=\"app-container\">\n<UserBar user={user} dispatchUser={dispatchUserUser} />\n{user && (\n<CreatePost user={user} handleAddPost={handleAddPost} dispatchPost={dispatchPost} />\n)}\n<PostList posts={posts} handleDeletePost={handleDeletePost} /> //renders the postlist component\n</div>\n);\n}\nexport default App;\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}