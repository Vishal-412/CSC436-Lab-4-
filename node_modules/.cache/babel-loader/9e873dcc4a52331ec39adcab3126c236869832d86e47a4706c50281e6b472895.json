{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\workspace\\\\myblog\\\\src\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; // Import React and useState from the React library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost({\n  user,\n  handleAddPost,\n  dispatchPost\n}) {\n  _s();\n  // Define a functional component named CreatePost that takes user, handleAddPost, and dispatchPost as props\n  const [title, setTitle] = useState(\"\"); // State for the post title\n  const [content, setContent] = useState(\"\"); // State for the post content\n  const [author, setAuthor] = useState(\"\"); // State for the post author\n  // Event handler functions to update state when input fields change\n  function handleTitleChange(event) {\n    setTitle(event.target.value);\n  }\n  function handleContentChange(event) {\n    setContent(event.target.value); // Update the content state when the content input changes\n  }\n\n  function handleAuthorChange(event) {\n    setAuthor(event.target.value); // Update the author state when the author input changes\n  }\n  // Event handler for form submission\n  function handleSubmit(event) {\n    event.preventDefault(); // Prevent the default form submission behavior\n    const newPost = {\n      title,\n      content,\n      author,\n      dateCreated: new Date().toISOString() // Generate the current timestamp\n    };\n    // Dispatch an action to create a new post with the post object\n    dispatchPost({\n      type: \"CREATE_POST\",\n      post: newPost\n    });\n    // Clear the form input fields after submission\n    setTitle(\"\");\n    setContent(\"\");\n    setAuthor(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: handleTitleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          value: content,\n          onChange: handleContentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 1\n  }, this);\n}\n_s(CreatePost, \"xTPoOI3FDP+v4io75AKN6OLd7cE=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreatePost","user","handleAddPost","dispatchPost","_s","title","setTitle","content","setContent","author","setAuthor","handleTitleChange","event","target","value","handleContentChange","handleAuthorChange","handleSubmit","preventDefault","newPost","dateCreated","Date","toISOString","type","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/user/workspace/myblog/src/CreatePost.js"],"sourcesContent":["import React, { useState } from \"react\"; // Import React and useState from the React library\r\nexport default function CreatePost({ user, handleAddPost, dispatchPost }) {\r\n // Define a functional component named CreatePost that takes user, handleAddPost, and dispatchPost as props\r\nconst [title, setTitle] = useState(\"\"); // State for the post title\r\nconst [content, setContent] = useState(\"\"); // State for the post content\r\nconst [author, setAuthor] = useState(\"\"); // State for the post author\r\n // Event handler functions to update state when input fields change\r\nfunction handleTitleChange(event) {\r\nsetTitle(event.target.value);\r\n}\r\nfunction handleContentChange(event) {\r\nsetContent(event.target.value); // Update the content state when the content input changes\r\n}\r\nfunction handleAuthorChange(event) {\r\nsetAuthor(event.target.value); // Update the author state when the author input changes\r\n}\r\n// Event handler for form submission\r\nfunction handleSubmit(event) {\r\nevent.preventDefault();  // Prevent the default form submission behavior\r\nconst newPost = {\r\ntitle,\r\ncontent,\r\nauthor,\r\ndateCreated: new Date().toISOString(), // Generate the current timestamp\r\n};\r\n // Dispatch an action to create a new post with the post object\r\ndispatchPost({ type: \"CREATE_POST\", post: newPost });\r\n// Clear the form input fields after submission\r\nsetTitle(\"\");\r\nsetContent(\"\");\r\nsetAuthor(\"\");\r\n}\r\nreturn (\r\n<div className=\"create-post\">\r\n<h3>Create New Post</h3>\r\n<form onSubmit={handleSubmit}>\r\n<div >\r\n<label htmlFor=\"title\">Title:</label>\r\n<input type=\"text\" id=\"title\" value={title} onChange={handleTitleChange} />\r\n</div>\r\n<div>\r\n<label htmlFor=\"content\">Content:</label>\r\n<textarea id=\"content\" value={content} onChange={handleContentChange} />\r\n</div>     \r\n<div>\r\n<button type=\"submit\">Create Post</button>\r\n</div>\r\n</form>\r\n</div>\r\n);\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}