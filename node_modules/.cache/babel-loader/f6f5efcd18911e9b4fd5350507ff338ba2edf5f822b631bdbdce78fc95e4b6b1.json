{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\workspace\\\\myblog\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useReducer } from \"react\";\nimport CreatePost from \"./CreatePost\";\nimport UserBar from \"./Userbar\";\nimport PostList from \"./PostList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const initialPosts = [{\n    title: \"React Hooks\",\n    content: \"The great thing since sliced bread!\",\n    author: \"Daniel Bugl\"\n  }, {\n    title: \"Using React Fragment\",\n    content: \"Keeping the DOM tree clean\",\n    author: \"Daniel Bugl\"\n  }, {\n    title: \"Component reusability\",\n    content: \"Make your component reusable\",\n    author: \"Daniel Bugl\"\n  }];\n  const [createPostVisible, setCreatePostVisible] = useState(false);\n  function userReducer(state, action) {\n    switch (action.type) {\n      case \"LOGIN\":\n        setCreatePostVisible(true);\n        return action.username;\n      case \"REGISTER\":\n        setCreatePostVisible(true);\n        return action.username;\n      case \"LOGOUT\":\n        setCreatePostVisible(false);\n        return null;\n      default:\n        return state;\n    }\n  }\n  const [user, dispatchUser] = useReducer(userReducer, \"\");\n  function postReducer(state, action) {\n    switch (action.type) {\n      case \"CREATE_POST\":\n        const newPost = {\n          title: action.post.title,\n          content: action.post.content,\n          author: user,\n          complete: false,\n          dateCreated: new Date().toISOString(),\n          dateCompleted: null\n        };\n        return [newPost, ...state];\n      case \"TOGGLE_POST\":\n        const updatedPosts = state.map(post => {\n          if (post.title === action.title) {\n            post.complete = !post.complete;\n            post.dateCompleted = post.complete ? new Date().toISOString() : null;\n          }\n          return post;\n        });\n        return updatedPosts;\n      case \"DELETE_POST\":\n        return state.filter(post => post.title !== action.title);\n      default:\n        return state;\n    }\n  }\n  const [posts, dispatchPost] = useReducer(postReducer, initialPosts);\n  const handleAddPost = newPost => {\n    console.log(newPost);\n    dispatchPost({\n      type: \"CREATE_POST\",\n      ...newPost\n    });\n  };\n  const handleDeletePost = title => {\n    dispatchPost({\n      type: \"DELETE_POST\",\n      title\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserBar, {\n      user: user,\n      dispatchUser: dispatchUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(CreatePost, {\n      user: user,\n      handleAddPost: handleAddPost,\n      dispatchPost: dispatchPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts,\n      handleDeletePost: handleDeletePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wFJmhFU4tLIrCY9JNKU8S1Tq76Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useReducer","CreatePost","UserBar","PostList","jsxDEV","_jsxDEV","App","_s","initialPosts","title","content","author","createPostVisible","setCreatePostVisible","userReducer","state","action","type","username","user","dispatchUser","postReducer","newPost","post","complete","dateCreated","Date","toISOString","dateCompleted","updatedPosts","map","filter","posts","dispatchPost","handleAddPost","console","log","handleDeletePost","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/workspace/myblog/src/App.js"],"sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport CreatePost from \"./CreatePost\";\nimport UserBar from \"./Userbar\";\nimport PostList from \"./PostList\";\nimport \"./App.css\";\n\nfunction App() {\n  const initialPosts = [\n    {\n      title: \"React Hooks\",\n      content: \"The great thing since sliced bread!\",\n      author: \"Daniel Bugl\"\n    },\n    {\n      title: \"Using React Fragment\",\n      content: \"Keeping the DOM tree clean\",\n      author: \"Daniel Bugl\"\n    },\n    {\n      title: \"Component reusability\",\n      content: \"Make your component reusable\",\n      author: \"Daniel Bugl\"\n    }\n  ];\n\n  const [createPostVisible, setCreatePostVisible] = useState(false);\n\n  function userReducer(state, action) {\n    switch (action.type) {\n      case \"LOGIN\":\n        setCreatePostVisible(true);\n        return action.username;\n      case \"REGISTER\":\n        setCreatePostVisible(true);\n        return action.username;\n      case \"LOGOUT\":\n        setCreatePostVisible(false);\n        return null;\n      default:\n        return state;\n    }\n  }\n\n  const [user, dispatchUser] = useReducer(userReducer, \"\");\n\n  function postReducer(state, action) {\n    switch (action.type) {\n      case \"CREATE_POST\":\n        const newPost = {\n          title: action.post.title,\n          content: action.post.content,\n          author: user,\n          complete: false,\n          dateCreated: new Date().toISOString(),\n          dateCompleted: null,\n        };\n        return [newPost, ...state];\n\n      case \"TOGGLE_POST\":\n        const updatedPosts = state.map((post) => {\n          if (post.title === action.title) {\n            post.complete = !post.complete;\n            post.dateCompleted = post.complete ? new Date().toISOString() : null;\n          }\n          return post;\n        });\n        return updatedPosts;\n\n      case \"DELETE_POST\":\n        return state.filter((post) => post.title !== action.title);\n\n      default:\n        return state;\n    }\n  }\n\n  const [posts, dispatchPost] = useReducer(postReducer, initialPosts);\n\n  const handleAddPost = (newPost) => {\n    console.log(newPost);\n    dispatchPost({ type: \"CREATE_POST\", ...newPost });\n  };\n\n  const handleDeletePost = (title) => {\n    dispatchPost({ type: \"DELETE_POST\", title });\n  };\n\n\n  return (\n    <div>\n      <UserBar user={user} dispatchUser={dispatchUser} />\n      {user && (\n        <CreatePost\n          user={user}\n          handleAddPost={handleAddPost}\n          dispatchPost={dispatchPost} \n        />\n      )}\n      <PostList posts={posts} handleDeletePost={handleDeletePost} />\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}